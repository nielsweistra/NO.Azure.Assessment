{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username"
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password"
        }
      },
      "vmRole": {
        "type": "string",
        "defaultValue": "web",
        "metadata": {
          "description": "Prefix to use for VM names"
        }
      },
      "VmSize": {
        "type": "string",
        "defaultValue": "Standard_D1_v2",
        "allowedValues": [
          "Standard_D1_v2"
        ]
      },
      "Company": {
        "type": "string",
        "defaultValue": "Company",
        "metadata": {
          "description": "Name of the company"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "namingInfix": "[toLower(parameters('Company'))]",
      "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
      "availabilitySetName": "[toLower(concat(variables('namingInfix'), '_', 'avset', '_', uniqueString(resourceGroup().id)))]",
      "virtualNetworkName": "[toLower(concat(variables('namingInfix'), '_', 'vnet', '_', uniqueString(resourceGroup().id)))]",
      "subnetName": "backendSubnet",
      "loadBalancerName": "[toLower(concat(variables('namingInfix'), '_', 'lb', '_', uniqueString(resourceGroup().id)))]",
      "networkInterfaceName": "[toLower(concat(variables('namingInfix'), '_', 'nic', '_', uniqueString(resourceGroup().id)))]",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "numberOfInstances": 2,
      "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
      "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('bePoolName'))]",
      "lbProbeID": "[concat(variables('lbID'),'/probes/lbprobe')]",
      "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
      "publicIPAddressName": "[concat(variables('namingInfix'), 'pip', uniqueString(resourceGroup().id))]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
    },
    "resources": [
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Compute/availabilitySets",
        "location": "[resourceGroup().location]",
        "name": "[variables('availabilitySetName')]",
        "properties": {
          "PlatformUpdateDomainCount": 2,
          "PlatformFaultDomainCount": 2
        },
        "sku": {
          "name": "Aligned"
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "172.16.0.0/12"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "172.16.1.0/24"
              }
            },
            {
              "name": "Frontend",
              "properties": {
                "addressPrefix": "172.16.2.0/24"
              }
            },
            {
              "name": "Management",
              "properties": {
                "addressPrefix": "172.16.99.0/24"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('networkInterfaceName'), copyindex())]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "dependsOn": [
          "[variables('virtualNetworkName')]",
          "[variables('loadBalancerName')]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[variables('lbPoolID')]"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-06-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(concat(variables('namingInfix'), uniqueString(resourceGroup().id)))]"
          }
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('loadBalancerName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('publicIPAddressID')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[variables('bePoolName')]"
            }
          ],
          "loadBalancingRules": [
            {
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbPoolID')]"
                },
                "probe": {
                  "id": "[variables('lbProbeID')]"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "idleTimeoutInMinutes": 15
              },
              "Name": "HTTP"
            }
          ],
          "probes": [
            {
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 15,
                "numberOfProbes": 2
              },
              "name": "lbprobe"
            }
          ]
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(variables('namingInfix'), parameters('vmRole'), copyindex())]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "nicLoop",
          "[variables('availabilitySetName')]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmsize')]"
          },
          "osProfile": {
            "computerName": "[concat(parameters('Company'), copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), copyindex()))]"
              }
            ]
          }
        }
      }
    ]
  }